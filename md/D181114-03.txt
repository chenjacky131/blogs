AOP(面向切面编程)
----------

by jacky at 2018/11/14

&nbsp;

简单的面向切面方式介绍

#### 第一种
````javascript
    Function.prototype.before = function(beforefn){
      var _self = this;
      return function(){
        beforefn.apply(this,arguments);
        return _self.apply(this,arguments);
      }
    }
    Function.prototype.after = function(afterfn){
      var _self = this;
      return function(){
        var ret = _self.apply(this,arguments);
        afterfn.apply(this,arguments);
        return ret;
      }
    }
    var func = function(){
      console.log(2);
    }
    var func1 = func.before(function(){
      console.log(1)
    }).after(function(){
      console.log(3);
    });
    func1()
````
#### 第二种
````javascript
    function constructor(originfn,beforefn,afterfn){
      return function(){
        beforefn.apply(this,arguments);
        originfn.apply(this,arguments);
        afterfn.apply(this,arguments);
      }
    }
    var fun = constructor(function(a){console.log('我是原函数',a)},function(b){console.log('我在原函数之前执行',b)},function(c){console.log('我在原函数之后执行',c)});
    fun('我是参数');
````
<!-- SLIDE PAGES V1.0, DO NOT CHANGE THIS LINE. -->
<div $=ScenePage key="auto0"></div>
<div $=ScenePage key="auto1" no-show="1"></div>
