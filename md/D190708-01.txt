常用的js函数1
----------

by 2019 at 2019/07/08

##### 1.返回from到to直接的随机整数
````javascript

return Math.floor(Math.random()*(to-from+1))+from

````
##### 2.节流函数

````
const debounce = (fn, delay) => {// 节流函数
        let delays = delay || 500;
        let timer;
        return function() {
            let th = this;
            let args = arguments;
            if (timer) {
            clearTimeout(timer);
            }
            timer = setTimeout(function() {
            timer = null;
            fn.apply(th, args);
            }, delays);
        };
 }
````

##### 3.判断一个元素是否为另一个元素的父元素

````
const isParent = (obj, parentObj) => {//  判断一个元素是否为另一个元素的子元素，obj为需要判断的元素，parentObj为父元素
        while (
          obj != undefined &&
          obj != null &&
          (obj.tagName && obj.tagName.toUpperCase()) != "BODY"
        ) {
          if (obj == parentObj) {
            return true;
          }
          obj = obj.parentNode;
        }
        return false;
      }
      app.config.globalProperties.$moment = moment
    }
````

##### 4.把对象转换成地址栏里的query参数形式

````
$bodyParse = (json) => {
	if(!json){
		return ''
	}
	let url = '?'
	const length = Object.keys(json).length;
	for(let i = 0; i < length; i++){
		url+= `${Object.keys(json)[i]}=${json[Object.keys(json)[i]]}${i === (length - 1) ? '':'&' }`
	}
	return url
}
````
##### 5.保留指定为小数
````
/**
 * @description: 保留小数点位数
 * @param {Number} value: 要保留小数点的小数
 * @param {Number} number: 要保留小数的位数
 * @return {String} : 返回处理过的小数字符串
 */
function myTofixed(value, number) {
	if(!number || String(value).indexOf('.') === -1){	//	如果要保留的小数位没指定或者value不是小数，直接返回value
		return value
	}else{
		const strValue = String(Number(value).toFixed(number))	//	把科学计数法的格式去掉
		const dotIndex = strValue.indexOf('.')
		let temp = []
		for(let i = 0; i < strValue.length; i++){	//	先保留指定位数的小数
			if(i <= dotIndex + number){
				temp.push(strValue[i])
			}
		}
		if(Number(temp.join('')) === 0){	//	如果去除掉不需要的数据后已经是0了，则直接返回0
			return 0
		}
		//	去除小数点后面多余的0
		let reversedArr = temp.reverse()
		let quit = false
		while(!quit){
				if(reversedArr[0] === '0' || reversedArr[0] === '.'){
						reversedArr.shift()
				}else{
						quit = true
				}
		}
		return reversedArr.reverse().join('')
	}
}
````
<!-- SLIDE PAGES V1.0, DO NOT CHANGE THIS LINE. -->
<div $=ScenePage key="auto0"></div>
<div $=ScenePage key="auto1" no-show="1"></div>
