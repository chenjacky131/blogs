对象的深拷贝
----------

by jacky at 2018/12/24
***
````javascript
// 方法一
var clone = function (obj) { 
    if(obj === null) return null
    if(typeof obj !== 'object') return obj
    if(obj.constructor===Date) return new Date(obj)
    if(obj.constructor === RegExp) return new RegExp(obj)
    var newObj = new obj.constructor ();  //保持继承链
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {   //不遍历其原型链上的属性
            var val = obj[key]
           // 使用arguments.callee解除与函数名的耦合
            newObj[key] = typeof val === 'object' ? arguments.callee(val) : val
        }
    }  
    return newObj; 
};

// 方法二
Object.prototype.clone = function() {
  var o = this.constructor === Array ? [] : {};
  for (var e in this) {
    o[e] = typeof this[e] === "object" ? this[e].clone() : this[e];
  }
  return o;
}
````
<!-- SLIDE PAGES V1.0, DO NOT CHANGE THIS LINE. -->
<div $=ScenePage key="auto0"></div>
<div $=ScenePage key="auto1" no-show="1"></div>
